# -*- coding: utf-8 -*-
"""Credit_Scoring_model.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1AATP5-FnqgedfU_azShYYGFRvYKOAZJL
"""

import pandas as pd
import numpy as np

from sklearn.model_selection import train_test_split
from sklearn.preprocessing import StandardScaler
from sklearn.metrics import classification_report, confusion_matrix, accuracy_score
from sklearn.linear_model import LogisticRegression

"""Flow of model:


1.   importing dataset
2.   Data preparation
3.   Train_test_split
4.   Risk_model building
5.   Model performance
6.   Testing model
7.   Storing model in xlsx format




"""

from google.colab import drive
drive.mount('/content/drive')

dataset=pd.read_excel("/content/drive/My Drive/a_Dataset_CreditScoring.xlsx")

dataset.shape

dataset.isna().sum()

dataset=dataset.fillna(dataset.mean())

dataset

dataset['CollectCnt']

#model training (Train_Test_split)

y=dataset.iloc[:,0].values
X=dataset.iloc[:,1:28].values

X_train,X_test,y_train,y_test=train_test_split(X,y,test_size=0.2,random_state=0)

sc=StandardScaler()
X_train=sc.fit_transform(X_train)
X_test=sc.transform(X_test)

classifier=LogisticRegression()
classifier.fit(X_train,y_train)
y_pred=classifier.predict(X_test)

print(confusion_matrix(y_test,y_pred))

print(accuracy_score(y_test,y_pred))

predictions=classifier.predict_proba(X_test)

predictions

df_prediction_prob = pd.DataFrame(predictions, columns = ['prob_0', 'prob_1'])
df_prediction_target = pd.DataFrame(classifier.predict(X_test), columns = ['predicted_TARGET'])
df_test_dataset = pd.DataFrame(y_test,columns= ['Actual Outcome'])

dfx=pd.concat([df_test_dataset, df_prediction_prob, df_prediction_target], axis=1)

dfx.to_csv("/content/drive/My Drive/c1_Model_Prediction.xlsx", sep=',', encoding='UTF-8')

dfx.head()

dfx



dfx.shape

dfx.isna().sum()

